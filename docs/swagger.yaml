definitions:
  api.CommentRequest:
    properties:
      comment:
        maxLength: 500
        type: string
    required:
    - comment
    type: object
  models.CommentResponse:
    properties:
      comment:
        maxLength: 500
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      ip_address:
        type: string
      movie_id:
        type: integer
      updated_at:
        type: string
    required:
    - comment
    type: object
  models.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  requests.Character:
    properties:
      created:
        type: string
      gender:
        type: string
      height_in_cm:
        description: URL            string    `json:"url"`
        type: integer
      height_in_feet:
        type: integer
      height_in_inches:
        type: integer
      id:
        type: integer
      movies:
        items:
          type: integer
        type: array
      name:
        type: string
    type: object
  requests.Film:
    properties:
      characters:
        items:
          type: string
        type: array
      episode_id:
        type: integer
      film_count:
        type: integer
      opening_crawl:
        type: string
      release_date:
        type: string
      title:
        type: string
    type: object
info:
  contact: {}
paths:
  /films/{id}/character/{gender}/{sort}/{order}:
    get:
      description: Fetches all characters for a given film
      parameters:
      - description: Film ID
        in: path
        name: id
        required: true
        type: string
      - description: sort by (name, gender, height)
        in: path
        name: sort
        required: true
        type: string
      - description: sort by (asc, desc)
        in: path
        name: order
        required: true
        type: string
      - description: The gender to filter by (male, female)
        in: path
        name: gender
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/requests.Character'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Fetch film characters
      tags:
      - character
  /films/{id}/comment/create:
    post:
      consumes:
      - application/json
      description: Saves a comment for a film and updates the comment count in cache
      parameters:
      - description: Film ID
        in: path
        name: id
        required: true
        type: integer
      - description: Comment payload
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/api.CommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CommentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Save a comment for a film
      tags:
      - comments
  /films/{id}/comments:
    get:
      consumes:
      - application/json
      description: Returns a list of comments for a given film ID
      parameters:
      - description: Film ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CommentResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get comments for a film
      tags:
      - comments
  /films/all:
    get:
      description: Retrieve all films
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/requests.Film'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all films
      tags:
      - films
  /films/comments:
    get:
      description: Retrieve all comments in reverse chronological order
      operationId: get-comments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CommentResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all comments
      tags:
      - comments
swagger: "2.0"
